$date
	Fri May 31 20:13:41 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module cache_tb $end
$var wire 32 ! word_out [31:0] $end
$var wire 1 " rdy $end
$var wire 1 # mem_wr_en $end
$var wire 512 $ mem_wr_blk [511:0] $end
$var wire 1 % mem_rd_en $end
$var wire 512 & mem_rd_blk [511:0] $end
$var wire 32 ' mem_addr [31:0] $end
$var wire 1 ( hit $end
$var wire 8 ) byte_out [7:0] $end
$var parameter 32 * CLK_CYCLES $end
$var parameter 32 + CLK_PERIOD $end
$var parameter 32 , RST_PULSE $end
$var reg 32 - addr [31:0] $end
$var reg 1 . clk $end
$var reg 32 / data_wr [31:0] $end
$var reg 1 0 rd_en $end
$var reg 1 1 rst_n $end
$var reg 1 2 wr_en $end
$scope module CACHE_DUT $end
$var wire 32 3 addr [31:0] $end
$var wire 1 . clk $end
$var wire 32 4 data_wr [31:0] $end
$var wire 1 0 rd_en $end
$var wire 1 1 rst_n $end
$var wire 1 2 wr_en $end
$var wire 512 5 mem_rd_blk [511:0] $end
$var parameter 3 6 EVICT $end
$var parameter 3 7 IDLE $end
$var parameter 3 8 RD_HIT $end
$var parameter 3 9 RD_MISS $end
$var parameter 3 : WR_HIT $end
$var parameter 3 ; WR_MISS $end
$var reg 8 < byte_out [7:0] $end
$var reg 1 ( hit $end
$var reg 32 = mem_addr [31:0] $end
$var reg 1 % mem_rd_en $end
$var reg 512 > mem_wr_blk [511:0] $end
$var reg 1 # mem_wr_en $end
$var reg 3 ? next [2:0] $end
$var reg 1 @ rd_m $end
$var reg 1 " rdy $end
$var reg 3 A state [2:0] $end
$var reg 32 B word_out [31:0] $end
$var reg 1 C wr_m $end
$var integer 32 D i [31:0] $end
$var integer 32 E j [31:0] $end
$scope begin evict_loop $end
$upscope $end
$scope begin rd_hit_loop $end
$upscope $end
$scope begin rd_miss_loop $end
$upscope $end
$scope begin wr_hit_loop $end
$upscope $end
$scope begin wr_miss_loop $end
$upscope $end
$upscope $end
$scope module MEM_DUT $end
$var wire 32 F addr [31:0] $end
$var wire 1 . clk $end
$var wire 1 % rd_en $end
$var wire 512 G wr_data [511:0] $end
$var wire 1 # wr_en $end
$var parameter 32 H BYTES_PER_WORD $end
$var parameter 47 I DEPTH $end
$var parameter 32 J INIT $end
$var parameter 32 K NSEED_BLK $end
$var parameter 32 L SEED $end
$var parameter 32 M WIDTH $end
$var parameter 32 N WORDS_PER_BLOCK $end
$var reg 512 O rd_data [511:0] $end
$var integer 32 P byte_idx [31:0] $end
$var integer 32 Q i [31:0] $end
$var integer 32 R j [31:0] $end
$var integer 32 S word_idx [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 N
b1000 M
b1 L
b1000000000 K
b0 J
b1000000000000000 I
b100 H
b100 ;
b11 :
b10 9
b1 8
b0 7
b101 6
b11001 ,
b1100100 +
b10100 *
$end
#0
$dumpvars
bx S
b1000000 R
b1000000000000000 Q
bx P
bx O
bx G
bx F
b10000000 E
b100 D
xC
bx B
b0 A
x@
b0 ?
bx >
bx =
bx <
bx 5
bx 4
b0 3
02
01
10
bx /
1.
b0 -
bx )
x(
bx '
bx &
x%
bx $
x#
x"
bx !
$end
#25
11
#50
0.
#100
b101 ?
bz )
bz <
bz !
bz B
0C
1@
0#
0%
0"
0(
1.
#150
0.
#200
b10 ?
b
b
b
b100 P
b10000 S
b101 A
1%
b0 '
b0 =
b0 F
b100 D
1.
#250
0.
#300
b0 ?
b10000000000000 -
b10000000000000 3
b10 A
b11110000 )
b11110000 <
b11101101111011101110111111110000 !
b11101101111011101110111111110000 B
1"
b100 D
1.
#350
0.
#400
b101 ?
b0 A
bz )
bz <
bz !
bz B
1@
0%
0"
1.
#450
0.
#500
b100 P
b10000 S
b10 ?
1%
b10000000000000 '
b10000000000000 =
b10000000000000 F
b101 A
b100 D
1.
#550
0.
#600
b0 ?
b100000000000000 -
b100000000000000 3
b10 A
b11110000 )
b11110000 <
b11101101111011101110111111110000 !
b11101101111011101110111111110000 B
1"
b100 D
1.
#650
0.
#700
b101 ?
b0 A
bz )
bz <
bz !
bz B
1@
0%
0"
1.
#750
0.
#800
b100 P
b10000 S
b10 ?
1%
b100000000000000 '
b100000000000000 =
b100000000000000 F
b101 A
b100 D
1.
#850
0.
#900
b0 ?
b110000000000000 -
b110000000000000 3
b10 A
b11110000 )
b11110000 <
b11101101111011101110111111110000 !
b11101101111011101110111111110000 B
1"
b100 D
1.
#950
0.
#1000
b101 ?
b0 A
bz )
bz <
bz !
bz B
1@
0%
0"
1.
#1050
0.
#1100
b100 P
b10000 S
b10 ?
1%
b110000000000000 '
b110000000000000 =
b110000000000000 F
b101 A
b100 D
1.
#1150
0.
#1200
b0 ?
b11111010111110101111101011111010 /
b11111010111110101111101011111010 4
b100000000000000 -
b100000000000000 3
12
00
b10 A
b11110000 )
b11110000 <
b11101101111011101110111111110000 !
b11101101111011101110111111110000 B
1"
b100 D
1.
#1250
0.
#1300
b11 ?
b0 A
bz )
bz <
bz !
bz B
0@
0%
0"
1(
1.
#1350
0.
#1400
02
10
b0 ?
1"
b11 A
b100 E
b100 D
1.
#1450
0.
#1500
b1 ?
b0 A
0"
1.
#1550
0.
#1600
b1000000000000000 -
b1000000000000000 3
b0 ?
b11111010 )
b11111010 <
b11111010111110101111101011111010 !
b11111010111110101111101011111010 B
1"
b1 A
b100 E
b100 D
1.
#1650
0.
#1700
1@
b101 ?
b0 A
bz )
bz <
bz !
bz B
0"
0(
1.
#1750
0.
#1800
b
b
b
b100 P
b10000 S
b10 ?
b
b
b
1#
1%
b1000000000000000 '
b1000000000000000 =
b1000000000000000 F
b101 A
b10 D
1.
#1850
0.
#1900
b0 ?
b10 A
b11111010 )
b11111010 <
b11111010111110101111101011111010 !
b11111010111110101111101011111010 B
0#
1"
b100 D
1.
#1950
0.
#2000
b101 ?
b0 A
bz )
bz <
bz !
bz B
1@
0%
0"
1.
