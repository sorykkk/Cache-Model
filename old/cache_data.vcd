$date
	Fri May 31 02:54:40 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module cache_tb $end
$var wire 32 ! word_out [31:0] $end
$var wire 1 " mem_wr_en $end
$var wire 512 # mem_wr_blk [511:0] $end
$var wire 1 $ mem_rd_en $end
$var wire 512 % mem_rd_blk [511:0] $end
$var wire 32 & mem_addr [31:0] $end
$var wire 1 ' hit $end
$var wire 8 ( byte_out [7:0] $end
$var parameter 32 ) CLK_CYCLES $end
$var parameter 32 * CLK_PERIOD $end
$var parameter 32 + RST_PULSE $end
$var reg 32 , addr [31:0] $end
$var reg 1 - clk $end
$var reg 32 . data_wr [31:0] $end
$var reg 1 / rd_en $end
$var reg 1 0 rst_n $end
$var reg 1 1 wr_en $end
$scope module CACHE_DUT $end
$var wire 32 2 addr [31:0] $end
$var wire 1 - clk $end
$var wire 32 3 data_wr [31:0] $end
$var wire 1 ' hit $end
$var wire 1 / rd_en $end
$var wire 1 0 rst_n $end
$var wire 1 1 wr_en $end
$var wire 512 4 mem_rd_blk [511:0] $end
$var parameter 3 5 EVICT $end
$var parameter 3 6 IDLE $end
$var parameter 3 7 RD_HIT $end
$var parameter 3 8 RD_MISS $end
$var parameter 3 9 WR_HIT $end
$var parameter 3 : WR_MISS $end
$var reg 8 ; byte_out [7:0] $end
$var reg 32 < mem_addr [31:0] $end
$var reg 1 $ mem_rd_en $end
$var reg 512 = mem_wr_blk [511:0] $end
$var reg 1 " mem_wr_en $end
$var reg 3 > next [2:0] $end
$var reg 1 ? rd_m $end
$var reg 3 @ state [2:0] $end
$var reg 32 A word_out [31:0] $end
$var reg 1 B wr_m $end
$var integer 32 C i [31:0] $end
$var integer 32 D j [31:0] $end
$upscope $end
$scope module MEM_DUT $end
$var wire 32 E addr [31:0] $end
$var wire 1 - clk $end
$var wire 1 $ rd_en $end
$var wire 512 F wr_data [511:0] $end
$var wire 1 " wr_en $end
$var parameter 32 G BYTES_PER_WORD $end
$var parameter 42 H DEPTH $end
$var parameter 32 I INIT $end
$var parameter 32 J NSEED_BLK $end
$var parameter 32 K SEED $end
$var parameter 32 L WIDTH $end
$var parameter 32 M WORDS_PER_BLOCK $end
$var reg 512 N rd_data [511:0] $end
$var integer 32 O byte_idx [31:0] $end
$var integer 32 P i [31:0] $end
$var integer 32 Q j [31:0] $end
$var integer 32 R word_idx [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 M
b1000 L
b1 K
b100 J
b0 I
b10000000000 H
b100 G
b100 :
b11 9
b10 8
b1 7
b0 6
b101 5
b11001 +
b1100100 *
b1010 )
$end
#0
$dumpvars
bx R
b1000000 Q
b100000000 P
bx O
bx N
bx F
bx E
b10000000 D
b100 C
0B
bx A
b0 @
1?
b101 >
bx =
bx <
bx ;
bx 4
bx 3
b0 2
01
00
1/
bx .
1-
b0 ,
bx (
0'
bx &
bx %
x$
bx #
x"
bx !
$end
#25
10
#50
0-
#100
b10 >
b100 O
b10000 R
b101 @
1$
1-
#150
0-
#200
1'
b0 >
b10 @
1-
#250
0-
#300
b1 >
b0 @
0?
bz (
bz ;
bz !
bz A
0$
0"
1-
#350
0-
#400
b1 @
bx (
bx ;
bx !
bx A
1-
#450
0-
#500
1-
#550
0-
#600
1-
#650
0-
#700
1-
#750
0-
#800
1-
#850
0-
#900
1-
#950
0-
#1000
1-
